//数据库创建
// ctrl + k,ctrl+c注释
// ctrl+k,ctrl+uz注释
 
#include <iostream>
#include <sqlite3.h>
#include <string>

int main() {
    sqlite3* db;
    char* errmsg = 0;

    // 打开或创建数据库
    int rc = sqlite3_open("mydatabase.db", &db);
    if (rc != SQLITE_OK) {
        std::cerr << "can't open database: " << sqlite3_errmsg(db) << std::endl;
        return 1;
    }

    // 创建用户表的 SQL 语句
    const char* sql = R"(
        CREATE TABLE IF NOT EXISTS user(
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            username TEXT UNIQUE NOT NULL,
            password TEXT NOT NULL
        );
    )";

    // 执行 SQL 语句
    rc = sqlite3_exec(db, sql, nullptr, nullptr, &errmsg);
    if (rc != SQLITE_OK) {
        std::cerr << "SQL execute wrong: " << errmsg << std::endl;
        sqlite3_free(errmsg);
        sqlite3_close(db);
        return 1;
    }

    std::cout << "user table created successfully" << std::endl;

    // 插入数据的 SQL 语句
    const char* insert_sql = R"(
        INSERT INTO user(username, password) VALUES('mchaike', '12345678');
    )";

    // 执行插入语句
    rc = sqlite3_exec(db, insert_sql, nullptr, nullptr, &errmsg);
    if (rc != SQLITE_OK) {
        std::cerr << "SQL execute wrong: " << errmsg << std::endl;
        sqlite3_free(errmsg);
        sqlite3_close(db);
        return 1;
    }

    std::cout << "Data inserted successfully" << std::endl;

    // 关闭数据库连接
    sqlite3_close(db);
    return 0;
}
